from typing import List, Dict, Optional
from pydantic import BaseModel 

class Player(BaseModel):
    name: str = "Adventurer"
    health: int = 50
    inventory: List[str] = []
    current_location_id: str = "start_forest" # Unique identifier for the location
    current_location_name: str = "" # Human-readable name, updated by agent
    # Add more player stats if needed (e.g., strength, charisma, gold)

class GameState(BaseModel):
    player: Player = Player()
    current_story_text: str = "" # The narrative text generated by Gemini
    available_choices: List[str] = [] # Options presented to the user
    user_input: str = "" # The raw input from the user (e.g., button text)
    plot_flags: Dict[str, bool] = {} # A dictionary for tracking story progression flags (e.g., {"dragon_defeated": False})
    game_over: bool = False # Flag to indicate if the game has ended
    # Add any other global game state variables here